[["index.html", "Biostatistics Portfolio I Preface", " Biostatistics Portfolio I Â© 2020 Dr. F.J. Rodenburg Preface Teaching statistics to students of the life sciences is a challenge: The courses are usually too short, with too much time in between them; Too many skills are introduced at once (math, programming and statistics); The connection to other courses is not clear enough. This is what I aim to address through this portfolio. You should complete the chapters leading up to your first statistics course. Part II will then pick up where your first course (presumably) left off and is meant to bridge the gap between your first statistics course and the next. Figure 0.1: The knowledge that is usually either assumed to be known already, or introduced briefly at that start of your first statistics course, will be introduced gradually throughout this portfolio.1 Chapters are short, have overlap with each other, and are accompanied with explanatory videos. This is not meant to be a cumbersome addition to your already intensive education, it is merely meant to reduce the difficulty of statistics courses. For those seeking an extra challenge, there are optional exercises that go more in-depth. Expert knowledge is what you learn during your other courses. Many choices in statistics are driven by knowledge of the subject area (e.g. biology). This holds especially true for study design and model selection. "],["installation.html", "Chapter 1 Installation 1.1 Installation Guide 1.2 The RStudio interface", " Chapter 1 Installation Throughout this portfolio, we will use RStudio. To use RStudio, you need to install both R and RStudio. (Even if you have an existing version, I recommend getting the latest version using the guide below.) 1.1 Installation Guide If youre comfortable with computer software, it boils down to: Install R; Install RStudio; Open RStudio and try to knit a template R markdown file. If you cant knit to PDF, see the note below and try knitting to HTML instead. Note about TinyTeX TinyTeX is not required for this portfolio. If you want to knit to PDF, you have to install TinyTeX. This has several advantages over HTML and Word, which are explained in the second video. For the portfolio, all you need is a working version of RStudio, and to be able to knit to HTML. Note about installation problems in general To ensure a smooth experience while using this portfolio, address installation issues early on. If youre following this portfolio in the context of your biology education at Leiden University, you can always contact Dr. H.G.J. van Mil or me about installation issues. Otherwise, see the general tips below, or try asking a question on Stackoverflow. Some general tips that will save you a lot of headaches with software during your education: Setting your system language to English (Windows, Mac) makes everything a lot easier to find; If you store data in Excel, setting the decimal separator to a dot (.) instead of a comma (,) will also save you a lot of extra effort; If you are on Windows, I highly recommend working on an account with administrator rights and setting user account control to Never notify. (Link says Windows 7 &amp; 8, but it works the same for Windows 10.) 1.2 The RStudio interface Watch the video on the RStudio interface below. From here on I will assume basic familiarity with the RStudio interface. "],["learning-the-basics-of-r.html", "Chapter 2 Learning the Basics of R 2.1 swirl 2.2 learnr (optional)", " Chapter 2 Learning the Basics of R Skills learned in this chapter: R Programming There are two great tutorial for learning the basics in R. This video shows how to use them: 2.1 swirl Watch the part about swirl and complete chapters 1, 2, 4, 7 &amp; 8 from the R Programming course. 2.2 learnr (optional) Complete the Data Basics chapter from the learnr package as explained in the video. (If you dont see a Tutorial tab, try running install.packages(\"learn\") in the console and then restart RStudio.) From here on out, I will assume basic familiarity with R syntax. "],["mendelian-genetics.html", "Chapter 3 Mendelian Genetics 3.1 Corn Example 3.2 Chi-Squared Test", " Chapter 3 Mendelian Genetics Skills learned in this chapter: Probability Theory, Hypothesis Testing In this chapter you will learn how to compare observed to expected frequencies using a chi-squared test. 3.1 Corn Example In the basic practicals you will count the number of differently colored corn kernels. Figure 3.1: A cob of corn with differently colored kernels. According to Mendelian genetics, if both parents were heterozygous for one color-causing gene, then we would expect a \\(3 : 1\\) ratio of kernels with dominant to recessive trait. For example, consider heterozygous parents for the red color-causing gene R: Table 3.1: Crossing of two heterozygous parents. R r R RR (red) Rr (red) r Rr (red) rr (yellow) If both parents were indeed Rr, then we would expected \\(\\text{red} : \\text{yellow} = 3 : 1\\) in the offspring. A statistical test works by taking on a statement of no difference and then collecting evidence against it. For the chi-squared test, that means that we compare the observed frequencies to the frequencies we would get under a \\(3:1\\) ratio. You can calculate these expected frequencies simply by multiplying the total kernels counted with the expected proportion. (Take care to convert the ratio to a proportion first.) Exercise 1 Suppose you count \\(361\\) red kernels and \\(139\\) yellow ones. What are the expected number of red and yellow kernels under the null-hypothesis of a \\(3 : 1\\) ratio? Exercise 2 The chi-squared test is defined as follows: \\(\\displaystyle\\chi^2 = \\sum_{i = 1}^k \\frac{(\\text{observed}_i - \\text{expected}_i)^2}{\\text{expected}_i}\\) Where \\(k\\) is the number of groups. Since there are only two groups (red, yellow), this becomes: \\(\\displaystyle\\chi^2 = \\frac{(\\text{observed}_\\text{red} - \\text{expected}_\\text{red})^2}{\\text{expected}_\\text{red}} + \\frac{(\\text{observed}_\\text{yellow} - \\text{expected}_\\text{yellow})^2}{\\text{expected}_\\text{yellow}}\\) Calculate \\(\\chi^2\\) using the observed and expected numbers from exercise 1. Show your calculation. 3.2 Chi-Squared Test In R you can compare observed to expected frequencies using chisq.test: example &lt;- c(361, 139) chisq.test(example, p = c(3/4, 1/4)) # Test against a 3:1 ratio ## ## Chi-squared test for given probabilities ## ## data: example ## X-squared = 2.0907, df = 1, p-value = 0.1482 This test calculates \\(\\chi^2\\) and computes a corresponding \\(p\\)-value that has the following meaning: If the population has a \\(3 : 1\\) ratio of red to yellow kernels, what is the chance of observing at least this large a deviation?2 If this chance is very small, then perhaps the null-hypothesis of a \\(3 : 1\\) ratio is not realistic and we reject it. If it is large, then this corn cob might as well have arisen from parents that yield a \\(3 : 1\\) ratio, and we dont reject the null-hypothesis. So what is small and large? That is a matter of opinion, but in biology a value of \\(0.05\\) is often used as a boundary. That means there is a \\(\\frac{1}{20}\\) chance of incorrectly concluding a significant deviation from \\(3 : 1\\). Exercise 3 Look at the output from the chi-squared test. With a threshold of \\(0.05\\), would you reject the null-hypothesis? What do you conclude? Exercise 4 Perform the same \\(\\chi^2\\)-test for your own counts of a corn cob and report the conclusion. Use the code from the example and adapt it for your own counts. Exercise 5 (optional) In the basic practicals, it was explained that each of four different dominant mutations is required for there to be red kernels: C, R, A1 and A2. Since these are all dominant mutations, lets assume that each mutant protein has a \\(\\frac{3}{4}\\) chance of being present in the offspring (due to a \\(3 : 1\\) ratio). What is then the chance of a red kernel? (For simplicity, ignore the possibility of C-inhibitor.) Population here does not refer to a biological population, but a statistical population. It is the population of all possible red and yellow corn kernels that could have formed from a \\(3 : 1\\) ratio. "],["bsa-curve.html", "Chapter 4 BSA Curve 4.1 What Is a BSA Curve? 4.2 How to Contruct a BSA-Curve 4.3 How Precise Is the Amount of Protein? 4.4 Extra (*)", " Chapter 4 BSA Curve Skills learned in this chapter: Estimation, Prediction In this chapter you will learn how to construct a BSA-curve for estimating the amount of protein present in a sample. ## Here will be a video on BSA curves 4.1 What Is a BSA Curve? In the basic practicals you will use a spectrophotometer to measure the light passing through a sample with a known protein concentration. By doing so for various concentrations of protein, you can construct a curve for the amount of protein present in a sample, given the amount of light passing through. This is a basic tool in biological experimentation. 4.1.1 What Is BSA? Bovine Serum Albumin (BSA) is the protein used as a reference to construct the curve.3 Table 4.1: Example data of a BSA experiment. As more protein is present in the sample, less light passes through and so the \\(\\text{A}_{595}\\) increases. BSA \\((\\mu\\text{g})\\) Absorption \\((\\text{A}_{595})\\) 0 0.000 1 0.135 2 0.235 3 0.328 4 0.409 5 0.495 Figure 4.1: BSA curve of the data from table . In the first part of this assignment, you will construct a BSA-curve based on your experimental data. In the second half, we are going use a statistical model to express the uncertainty of the estimation. 4.2 How to Contruct a BSA-Curve : ## Continuation using the example from before.  4.3 How Precise Is the Amount of Protein? 4.4 Extra (*) 4.4.1 Improving your figure 4.4.2 Biological limitations of BSA-curves This is a long ongoing discussion because of various reasons. I list a few. Everybody who is using Bradford has long forgotten how it really works (when was it first described?). Actually it binds aromatic amino acids, mainly tryptophane. So proteins with low numbers of these amino acids will react poorly in a Bradford assays. A good example is RNaseT1 which will practically show no reaction at all. Statistically this problem gets smaller as your protein gets bigger or if youre measuring mixtures of proteins. This also means that for purified protein the best standard is the protein itself or a very similar one. This holds for every assay with speciific binding or reaction characteristics. In any case if you compare results from different colorometric assays using different standards you will practically never get the same results and differences can be very big. Also look at temperature in the lab or incubator, matrix effects, buffers used, . By the way, You can use Bradford calibration lines for a longer time if you control your assay strictly, including reaction time. Freddy Dardenne 4.4.3 Statistical limitations of BSA-curves Linear or not; Interpolation vs extrapolation. Bradford, Marion (1976): A Rapid and Sensitive Method for the Quantification of Microgram Quantities of Protein Utilizing the Principle of Protein-Dye Binding. Analytical Biochemistry. 72 (12): 248254. doi:[10.1006/abio.1976.9999](https://doi.org/10.1006%2Fabio.1976.9999). PMID 942051 "],["adding-figures-in-r-markdown.html", "Chapter 5 Adding Figures in R Markdown 5.1 Image from a File (simple) 5.2 Image from a File (advanced) 5.3 Plots Drawn in R", " Chapter 5 Adding Figures in R Markdown Skills learned in this chapter: R Markdown, R Programming In this chapter you will learn how to insert a figure in an R markdown (.Rmd) file. You can use this chapter as future reference for when you want to include figures in later chapters. 5.1 Image from a File (simple) The simplest way to include a figure is by writing anywhere outside code chunks (in the white space): ![description](path/to/image.extension) In case the image is saved in the same folder as your R markdown file, this simplifies to: ![description](image.extension) (Replace image by the name of your file. Replace extention by whatever file extension your image has, like JPG, PNG or BMP.) This method is fine when you just want to include an image as is and dont care about anything else. For example, in the folder of my R markdown file, I have a subfolder figures with an example image called pollenSEM.jpg. Writing ![Some description](figures/pollenSEM.jpg) will include this image with a caption: An image of pollen under an SEM. From: https://w.wiki/gv8 Exercise 1 Include an image of your liking to your R markdown file using the method described above. For your own convenience, I recommend saving both the Rmd file and the image in the same folder. Knit your file to see if the image renders correctly. If you want to resize the image, check the next section. 5.2 Image from a File (advanced) For greater flexibility, include figures using include_graphics(). To use this function, you have to place it in a code chunk. For example: {r label = pollen, echo = TRUE, fig.cap = \"Image of pollen under an SEM. From: https://w.wiki/gv8\", out.width = '20%'} knitr::include_graphics(\"figures/pollenSEM.jpg\") Figure 5.1: Image of pollen under an SEM. From: https://w.wiki/gv8 Here I have set echo = TRUE, so that you can see the code that produced the figure. Usually, you will want to hide this code in a report. You can set echo = FALSE to suppress code in the output. (For those interested, a comprehensive list of chunk options is described here.) Adding a caption with the fig.cap argument automatically numbers the image. In addition, it allows for cross-referencing, using \\@ref(fig:...). Simply replace ... with the label you wrote for the chunk containing the image. For example, if I write \\@ref(fig:pollen), you will see: Figure 5.1. The 3 here refers to the chapter number and .1 refers to the first image in this chapter. Exercise 2 Using the advanced method, insert your figure from exercise 1 with a smaller size, using a new code chunk. Then, add a sentence below the chunk referencing the image using \\@ref(fig:...). 5.3 Plots Drawn in R Of course, you can also include plots generated by R code. Below are some examples. 5.3.1 Simple Example (Linear Relationship) x &lt;- 0:10 y &lt;- -5 + 2 * x plot(y ~ x, type = &quot;l&quot;, main = &quot;Linear Relationship&quot;) Figure 5.2: A linear relationship You can change the \\(x\\) and \\(y\\) axis range by using xlim and ylim, respectively: x &lt;- 0:10 y &lt;- -5 + 2 * x plot(y ~ x, type = &quot;l&quot;, main = &quot;Linear Relationship&quot;, xlim = c(0, 7.5), ylim = c(0, 10)) Figure 5.3: A linear relationship In fact, you can change virtually anything about the plot. You may skip this part if that doesnt interest you. We will go into detail about this later in the portfolio, but here is a quick example: x &lt;- 0:10 y &lt;- -5 + 2 * x plot( y ~ x, # Where to plot type = &quot;b&quot;, # What to plot (both points and linepieces) main = &quot;Custom plot&quot;, # Title ylab = &quot;y-values&quot;, # Y-label xlab = &quot;x-values&quot;, # X-label font = 2, # Axis font (bold) pch = 19, # Point character (solid) cex = 2, # Character expansion factor lty = &quot;dashed&quot;, # Line type lwd = 3, # Line width las = 1, # Perpendicular axes bty = &quot;n&quot;, # No box around the plot col = &quot;steelblue&quot;, # Change the color of what is plotted col.main = &quot;darkblue&quot;, # Color of the title col.lab = &quot;gray&quot;, # Color of the labels col.axis = &quot;darkgray&quot;, # Color of the axes ) Figure 5.4: A linear relationship If you like changing plots, you can find many more settings in the help page for par. 5.3.2 Multiple Plots in One Area You can also add multiple plots to a single plotting area, using par: par(mfrow = c(2, 3)) # Two rows and three columns (6 plots) plot(Sepal.Length ~ Sepal.Width, data = iris, main = &quot;Sepal Length vs Sepal Width&quot;) plot(Sepal.Length ~ Petal.Length, data = iris, main = &quot;Sepal Length vs Petal Length&quot;) plot(Sepal.Length ~ Petal.Width, data = iris, main = &quot;Sepal Length vs Petal Width&quot;) plot(Sepal.Width ~ Petal.Length, data = iris, main = &quot;Sepal Width vs Petal Length&quot;) plot(Sepal.Width ~ Petal.Width, data = iris, main = &quot;Sepal Width vs Petal Width&quot;) plot(Petal.Length ~ Petal.Width, data = iris, main = &quot;Petal Length vs Petal Width&quot;) par(mfrow = c(1, 1)) # Restore the default (1 plot) Figure 5.5: Four variables in the iris data set plotted against each other. Here I used par(mfrow = c(2, 3)) to create a grid of 2 by 3 plots. I had to include the data argument to tell R where to retrieve these variables (a standard data set in R). I included the last line to restore the default settings. If you ever change a setting and forget the default, either look at the par help page, or just restart RStudio. Exercise 3 The code below generates data for a logarithmic, exponential and quadratic relationship. x &lt;- seq(1, 10, 0.01) y1 &lt;- -5 + 2 * log(x) y2 &lt;- -5 + 2 * exp(x) y3 &lt;- -5 + 2 * x^2 Copy the code above to a new chunk in your Rmd file and plot x against y1.\\(^\\dagger\\) Then create two more plots, where you plot x against y2 and x against y3. Use par(mfrow = c(..., ...)) to arrange these plots side by side. Within each call to plot, use the main argument to give each plot a title. Feel free to try and adjust other graphical parameters! \\(^\\dagger:\\) You dont need the data argument here, because if you run the code above, the objects will be stored in the workspace. Exercise 4 (optional) For those seeking an extra challenge, lets create a plot of a bacterial growth curve: First, there is a lag phase where no growth is observed; Then, growth enters an exponential phase; At some point, space and resource scarcity kick in and growth slows down to a stationary phase (no growth); Finally, resources are slowly, but surely exhausted and a negative growth takes place (death phase). Create a plot that shows each of the four phases. You can use the function lines to draw separate pieces of the curve, if you find that easier. Exercise 5 (optional) Use the function text to add the name of each phase above the plot. Adjust ylim if you have insufficient space for text, and set the cex argument in the text function to something smaller than 1 if the text does not fit. "],["adding-tables-in-r-markdown.html", "Chapter 6 Adding Tables in R Markdown 6.1 The User-Friendly Way: kable 6.2 Advanced: xtable (optional)", " Chapter 6 Adding Tables in R Markdown Skills learned in this chapter: R Markdown, R Programming In this chapter you will learn how to insert a table in an R markdown (.Rmd) file. You can use this chapter as future reference for when you want to include tables in later chapters. 6.1 The User-Friendly Way: kable Suppose you want to include a correlation matrix of the numeric variables in your data set: cor(iris[, -5]) # Omit the categorical column 5 (Species) ## Sepal.Length Sepal.Width Petal.Length Petal.Width ## Sepal.Length 1.0000000 -0.1175698 0.8717538 0.8179411 ## Sepal.Width -0.1175698 1.0000000 -0.4284401 -0.3661259 ## Petal.Length 0.8717538 -0.4284401 1.0000000 0.9628654 ## Petal.Width 0.8179411 -0.3661259 0.9628654 1.0000000 This is fine if you just want to see the correlation matrix yourself, but in a report you would want to change this into something more presentable. A fairly straightforward function for including tables is kable. It is part of the knitr package that you use to knit files. Compare the correlation matrix above with the one below: library(&quot;knitr&quot;) # Load the functions in knitr, including kable() kable(cor(iris[, -5])) Sepal.Length Sepal.Width Petal.Length Petal.Width Sepal.Length 1.0000000 -0.1175698 0.8717538 0.8179411 Sepal.Width -0.1175698 1.0000000 -0.4284401 -0.3661259 Petal.Length 0.8717538 -0.4284401 1.0000000 0.9628654 Petal.Width 0.8179411 -0.3661259 0.9628654 1.0000000 Thats it! Just wrap kable() around it and knitr will create a decently formatted table in the output. This works identically for knitting to Word, HTML or PDF. We can improve the table. For starters, it is hard to justify 7 decimals, so lets change that to 2: M &lt;- cor(iris[, -5]) # Store the correlation matrix into an object M kable(round(M, 2)) # Round to 2 decimals Sepal.Length Sepal.Width Petal.Length Petal.Width Sepal.Length 1.00 -0.12 0.87 0.82 Sepal.Width -0.12 1.00 -0.43 -0.37 Petal.Length 0.87 -0.43 1.00 0.96 Petal.Width 0.82 -0.37 0.96 1.00 We can also change the periods (.) in the variable names into spaces: M &lt;- cor(iris[, -5]) rownames(M) &lt;- c(&quot;Sepal Length&quot;, &quot;Sepal Width&quot;, &quot;Petal Length&quot;, &quot;Petal Width&quot;) colnames(M) &lt;- c(&quot;Sepal Length&quot;, &quot;Sepal Width&quot;, &quot;Petal Length&quot;, &quot;Petal Width&quot;) kable(round(M, 2)) Sepal Length Sepal Width Petal Length Petal Width Sepal Length 1.00 -0.12 0.87 0.82 Sepal Width -0.12 1.00 -0.43 -0.37 Petal Length 0.87 -0.43 1.00 0.96 Petal Width 0.82 -0.37 0.96 1.00 Or we could do it automatically with the function gsub (useful for larger data sets): M &lt;- cor(iris[, -5]) rownames(M) &lt;- gsub(&quot;[.]&quot;, &quot; &quot;, rownames(M)) # Exchange the period with a space colnames(M) &lt;- gsub(&quot;[.]&quot;, &quot; &quot;, colnames(M)) # Exchange the period with a space kable(round(M, 2)) (Output omitted; Identical to the previous table.) Finally lets center the numbers and add a caption: kable(round(M, 2), align = &quot;cccc&quot;, caption = &quot;A correlation matrix of the iris data set.&quot;) Table 6.1: A correlation matrix of the iris data set. Sepal Length Sepal Width Petal Length Petal Width Sepal Length 1.00 -0.12 0.87 0.82 Sepal Width -0.12 1.00 -0.43 -0.37 Petal Length 0.87 -0.43 1.00 0.96 Petal Width 0.82 -0.37 0.96 1.00 (For those interested, a comprehensive list of formatting options with kable can be found here.) Exercise 1 Make a table of the first 10 observations in the iris data set using kable. Remember to use library(\"knitr\") to load the kable function. Center all the variables. Knit your R markdown file to see if it renders correctly. Exercise 2 (optional) For those seeking an extra challenge, create a table that shows the mean (mean) and standard deviation (sd) of each numeric variable, per species. 6.2 Advanced: xtable (optional) The package xtable allows for far more control over the formatting. If you want to write professional looking reports in PDF format using R markdown, I recommend familiarizing yourself with xtable. There are no exercises for this paragraph. You may skip this part entirely if youre fine with just kable. To install and load xtable, run: install.packages(&quot;xtable&quot;) library(&quot;xtable&quot;) Then, it works like this: Example &lt;- cor(iris[, -5]) Xtable &lt;- xtable(Example, caption = &quot;A correlation matrix of the iris data set.&quot;) align(Xtable) &lt;- &quot;lcccc&quot; print(Xtable, comment = FALSE, type = &quot;html&quot;) A correlation matrix of the iris data set. Sepal.Length Sepal.Width Petal.Length Petal.Width Sepal.Length 1.00 -0.12 0.87 0.82 Sepal.Width -0.12 1.00 -0.43 -0.37 Petal.Length 0.87 -0.43 1.00 0.96 Petal.Width 0.82 -0.37 0.96 1.00 Note: xtable tables only print when you add the chunk option results = \"asis\". Here we already see some of the advantages and disadvantages of xtable: It requires more code; It does not automatically label the table; It places the caption below the table by default (a matter of preference); It automatically tries to use a sensible number of digits; It allows separate alignment of the rownames (thats what the l in lcccc does). The main power of xtable does not lie in its HTML features, but rather the precise control over tables in \\(\\LaTeX\\). If you want to create professional looking tables in PDF format, have a look at the xtable gallery. Specific examples can be provided per request. Exercise 3 (optional) Create a PDF file containing the table you made in exercise 2, using the xtable function. "],["probability-theory-i.html", "Chapter 7 Probability Theory I 7.1 What is Probability Theory? 7.2 Sample Spaces", " Chapter 7 Probability Theory I Skills learned in this chapter: Probability Theory 7.1 What is Probability Theory? Biology is an emperical field of research: Conclusions are drawn based on the results of experiments and other observations. Statistics is the field concerned with how to draw conclusions from observations and is based on the study of chance: Probability theory. If you understand the basics, it is much easier to understand how chances propagate. Think of questions like: If there are \\(2\\) conclusions in a paper, each with a \\(20\\%\\) chance of being false. What is the chance of at least one false conclusion? The answer is given at the end of the chapter. 7.2 Sample Spaces [Video on Elements of Biostatistics, chapter 2.1] Exercise 1 Exercise 2 Exercise 3 (optional) "],["microbiology-experiment.html", "Chapter 8 Microbiology Experiment 8.1 Introduction 8.2 Study Design 8.3 Why Use a Statistical Test? 8.4 How Do Statistical Tests Work? 8.5 The Chi-Squared Test 8.6 Exercises", " Chapter 8 Microbiology Experiment Skills learned in this chapter: Study Design, Hypothesis Testing 8.1 Introduction This is the explanation for first year biology students taking the microbiology course at Leiden University. The portfolio exercise itself is described all the way at the end. The first exercise uses an example data set. In the second exercise, you are to use your own experimental data. 8.2 Study Design In the microbiology assignment, you will design your own experiment, perform an analysis, draw conclusions and report your findings. That is a lot of work, so start planning in time! Designing a study requires consideration of both biology and statistics: What question is the study supposed to answer? What kind of test or model is able to do so? What are the independent experimental units?4 How large should your sample size be? To make it all feasible within the context of your microbiology course, lets restrict ourselves to one particular kind of comparison: Differences in counts among groups. The first experiment is the same for all students: Is there a difference in the number of bacterial colonies counted on agar plates exposed to the air for an hour in the kitchen and the living room? The experiment then looks something like this: For the second experiment, feel free to come up with your own variation, but ask a course assistant or your teacher whether your research question is valid (and feasible). Also note that a more complex comparison may require a more elaborate study design and analysis! Try and keep it simple. If you stick to bacterial counts in different groups, you can use a chi-squared test for the analysis, and a single agar plate per group. The chi-squared test is explained below, using an example data set. 8.3 Why Use a Statistical Test? You could simply count the number of colonies on each plate, determine the differences and be done with it. So whats the appeal of a statistical test? In the example research question, we compare the number of bacterial colonies after exposure to different conditions (kitchen, living room). There are uncountably many potential influences that we cannot (perfectly) measure, or control. Think of: The amount of medium on each plate will always differ slightly; Temperature, humidity, airflow, and the amount of sunlight cannot be controlled precisely, but can be expected to affect the number of live bacteria falling onto the plate; Storage and transportation conditions can be logically expected to affect growth; Bacteria from your hand or breath might fall onto the plate, rather than bacteria floating in the air of the kitchen/living room; The number of bacteria in the air is likely to depend on the last time someone used the kitchen, the ventilation hood and any nearby windows; Low concentration bacteria in the air either will, or will not enter the plate by chance; You would probably count a different number of bacteria, had you chosen a different moment, or position in the kitchen. And there are many other potential influences. Therefore, the exact count is hardly interesting. We arent so much interested in whether there is a difference, but rather whether there is large enough difference to be considered significant. A statistical test can help you decide on this. Ideally, we would use a large number of replicates, so that we are not looking at the effect of a single, outlying observation (e.g. a particularly dirty kitchen). Therefore, in a later chapter we will reflect on the results of all students combined, and how we can best analyze those. 8.4 How Do Statistical Tests Work? A statistical test works by taking on a statement of no difference and then collecting evidence against it. This statement of no difference is called the null-hypothesis (\\(H_0\\)). If there is sufficient evidence against it, the null-hypothesis is rejected. What consitutes enough evidence depends on what is considered an acceptable chance of a false positive (\\(\\alpha\\)): Null-hypothesis (\\(H_0\\)): A statement of no difference; Level of significance (\\(\\alpha\\)): What is an acceptable chance of a false positive?5 When counting bacterial colonies on plates from two plates, the null-hypothesis would be: \\(H_0:\\) There is no difference in the number of bacterial colonies on either plate. A false positive would mean that you conclude a significant difference, even though the null-hypothesis is true. This can always happen, because a sample is just a random draw from the population,6 and can coincidentally be different from its population. So which value should you choose for the level of significance (\\(\\alpha\\))? That depends on your research: If were developing a diagnostic test for cancer, then a false positive could mean a a very serious operation for the patient. This means we have to be very strict about false positives. Even \\(\\alpha = 0.01\\) would mean \\(\\frac{1}{100}\\) healthy individuals would wrongly undergo treatment;7 If were just counting bacteria in kitchens and living rooms, a false positive is not that consequential, and we can be less strict about what is significant. Specifically, that means you could choose whatever value for \\(\\alpha\\) you want. However, in biological journals, it is convention to go no higher than \\(\\alpha = 0.05\\). That implies a chance of \\(5\\%\\), or \\(\\frac{1}{20}\\), of a false positive. Therefore, for this experiment, lets use: \\(\\alpha = 0.05\\) When we conduct the test, it will result in a \\(p\\)-value. This is the chance that you would draw a sample with this large a difference, if the null-hypothesis were true. In other words, if there is no actual difference in bacteria in the air of your kitchen and living room, then what is the chance that you observed the difference of your experiment? If this chance is extremely small, then we reject the null-hypothesis. Specifically: If \\(p &lt; \\alpha\\), reject \\(H_0\\); If \\(p \\geq \\alpha\\), there is insufficient evidence against \\(H_0\\). An insignificant test does not demonstrate that there is no difference. It just means that your sample provides insufficient reason to reject the null-hypothesis. Nevertheless, the null-hypothesis is still only an assumption. 8.5 The Chi-Squared Test Suppose we do the experiment and count: Kitchen: 21 kolonies; Living room: 15 kolonies. Comparing observed to expected counts can be done with a \\(\\chi^2\\)-test (chi-squared). This test looks whether the proportion of colonies counted on the plate from the kitchen and living room are equal. 8.5.1 How Does the Chi-Squared Test Work? As youll see in the next section, performing the test is really easy with chisq.test(). Nevertheless, here Ill explain what the test actually does, so you can see what it is were really doing. If you already know how it works, feel free to skip to the next section. In short: A chi-squared test calculated the number \\(\\chi^2\\) as shown below, and then calculates a corresponding \\(p\\)-value. If the \\(p\\)-value is lower than \\(\\alpha\\), then there is a significant difference in the colonies counted in the kitchen and living room. \\(\\chi^2 = \\displaystyle\\sum_{i = 1}^k \\frac{(\\text{observed} - \\text{expected})^2}{\\text{expected}}\\) The expected numbers are the numbers under the null-hypothesis. These are simply equal to the average count: \\(\\text{expected} = \\frac{21 + 15}{2} = 18\\) Now we can calculate \\(\\chi^2\\): \\(\\chi^2 = \\displaystyle\\sum_{i = 1}^k \\frac{(\\text{obs.} - \\text{exp.})^2}{\\text{exp.}} = \\frac{(\\text{21} - \\text{18})^2}{\\text{18}} + \\frac{(\\text{15} - \\text{18})^2}{\\text{18}} = \\frac{1}{2} + \\frac{1}{2} = 1\\) You dont have to know how to estimate a \\(p\\)-value from that number, but I can easily show it in a figure: That is the chi-squared distribution with one degree of freedom (because we have two groups and calculated one value). This figure shows the distribution of values of \\(\\chi^2\\) that you would expect to find if the null-hypothesis were true. De largest chance is a value of \\(\\chi^2 = 0\\), and after that, the probability density decreases. The \\(p\\)-value answers the question: If the null-hypothesis is true, what is the chance of our \\(\\chi^2 = 1\\) or higher?. The \\(p\\)-value for \\(\\chi^2=1\\) is the surface area under the probability distribution from \\(1\\) on: That is \\(31.7\\%\\), almost one third of the entire surface area, so we dont have very convincing evidence against the null-hypothesis: If there is no difference in the population, the chance of \\(\\chi^2 \\geq 1\\) is \\(p = 0.317\\). In this example, \\(p &gt; \\alpha\\), so we dont reject \\(H_0\\). In the report we would write that there is insufficient evidence to conclude a difference in bacteria in the kitchen and living room from this experiment. To calculate this value yourself, you would have to evaluate the integral of the chi-squared distribution from \\(1\\) to \\(\\infty\\). I dont recommend trying it by hand. Fortunately, we have R: 1 - pchisq(1, df = 2 - 1) # df: two groups, one value estimated, so 2 - 1 ## [1] 0.3173105 This says: \\(1\\) minus the chance of any value up till \\(\\chi^2=1\\). And that is how we get \\(0.317\\). 8.5.2 Chi-Squared Test in R If you think the explanation so far is a lot, I dont blame you. It takes quite a lot of background knowledge to understand a simple test. The explanation of how the chi-squared test works will not be part of the microbiology exam. Nevertheless, I wanted to include it here, so that you can read what is going on when you use this test. Namely, it can all be done in a few seconds in R: example &lt;- c(21, 15) chisq.test(example) ## ## Chi-squared test for given probabilities ## ## data: example ## X-squared = 1, df = 1, p-value = 0.3173 That is all there is to it: R calculated a value of \\(\\chi^2 = 1\\); It then says df = 1, which means there is one degree of freedom: \\(\\text{number of independent observations} - \\text{number of estimated parameters} = 2 - 1 = 1\\); Those things combined yield a \\(p\\)-value of 0.3173. 8.6 Exercises Open the R markdown file Exercises.Rmd and answer the questions. The questions themselves are included here. 8.6.1 Performing a Chi-Squared Test Suppose another student performs the same experiment and counts: Kitchen: 36 colonies; Living room: 21 colonies. Use \\(\\alpha = 0.05\\) and conduct a \\(\\chi^2\\)-test for these data. You can use the code above and adapt it. 8.6.2 Comparing Two Students Suppose we want to see if the counts are significantly different between two students: Table 8.1: \\(2 \\times 2\\) contingency table of student 1 &amp; 2. Kitchen Living room Student 1 21 15 Student 2 36 21 All a \\(\\chi^2\\)-test does is compare observed to expected counts. You can apply this to contingency tables too. The test then determines the difference in the proportion of colonies in the kitchen and living room for student 1 and 2. You dont have to calculate the expected counts by hand, but an explanation is given below for those interested.\\(^\\dagger\\) In R, all you have to do is put the data in a \\(2 \\times 2\\) matrix, for example using rbind (row bind): Student1 &lt;- c(21, 15) Student2 &lt;- c(36, 21) ContingencyTable &lt;- rbind(Student1, Student2) # Create a 2x2 matrix colnames(ContingencyTable) &lt;- c(&quot;Kitchen&quot;, &quot;Living Room&quot;) # Add column names ContingencyTable # Print the result ## Kitchen Living Room ## Student1 21 15 ## Student2 36 21 Then, simply use chisq.test() on the contingency table: chisq.test(ContingencyTable) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: ContingencyTable ## X-squared = 0.060876, df = 1, p-value = 0.8051 This results in a \\(p\\)-value for the null-hypothesis: The difference in kitchen and living room is independent of which student performs the experiment. With \\(\\alpha = 0.05\\), what would you conclude? \\(^\\dagger:\\) For a contingency table, the expected counts are what you would expect if the relative counts of student 1 did not differ from student 2, proportional to their total counts: Table 8.2: Observed and expected frequencies for a \\(2 \\times 2\\) contingency table. Observed Expected Kitchen Living room Kitchen Living room Student 1 21 15 \\(\\frac{(21+36)(21+15)}{21+36+15+21}\\) \\(\\frac{(15+21)(21+15)}{21+36+15+21}\\) Student 2 36 21 \\(\\frac{(21+36)(36+21)}{21+36+15+21}\\) \\(\\frac{(15+21)(36+21)}{21+36+15+21}\\) 8.6.3 Comparing Two Other Students Conduct the same test for the difference between two students using the real experimental data from your class. For example, you could compare the results with your lab partners. You can use the the previous exercise as an example. An experimental unit is the smallest division of the sample that is still an independent part. Some example: In clinical trials, patients are experimental units; In a study on fertilizer effectiveness, plants are experimental units; In an experiment on antibiotic effectiveness, a single agar plate is an experimental unit. A false positive occurs when you conclude a significant difference, even though there is no real difference in the underlying population from which the sample came. Example 1: If we conclude a medicine works significantly better than a placebo in the sample, but it does not actually work on average in the population, then we have a false positive for the effect of the medicine. Example 2: Say we estimate the ratio of black to white sheep in a large farm by drawing a random sample. A false postive would occur if in the sample, the ratio differed significantly from \\(1 : 1\\), even though it does not in the whole farm. False positives are also called type I errors. The population here consists of all possible samples of air from your kitchen and living room. Of course, in reality a diagnostic test for cancer is followed by further diagnosis to minimize the probability of this scenario. "],["grasshoppers.html", "Chapter 9 Grasshoppers 9.1 Getting Started 9.2 Plotting the Data 9.3 Subsetting 9.4 \\(T\\)-Test", " Chapter 9 Grasshoppers In this chapter you will compare two means using a \\(t\\)-test. 9.1 Getting Started In this assignment, you will compare the mean thorax length and wingspan of male and female grasshoppers. If you havent already, install RStudio; Download the data from the Google Sheets file as comma separated values (.csv); Open RStudio and create a new R markdown file. Save this file to the same folder as the data!; Go to Session &gt; Set Working Directory &gt; To Source File Location. R now knows where to look for your data; Create a new code chunk and run the following code: grasshopper &lt;- read.csv(&quot;data/grasshoppers.csv&quot;) From here on out, just read the text, run the code in R, and answer the questions. Note: For the sake of privacy, this page uses a version of your data with scrambled names. I have also not linked the actual Google Drive file. Please ask an assistant if you cant find it. If the code ran successfully, you will have an object called grasshoppers in your workspace. You can view it by clicking it, or by running: View(grasshopper) You probably have better things to do today than type long names, so lets make the variable names a bit shorter: colnames(grasshopper) &lt;- c(&quot;Name&quot;, &quot;Affix&quot;, &quot;Surname&quot;, &quot;Group&quot;, &quot;Thorax&quot;, &quot;Wingspan&quot;, &quot;Sex&quot;) Does R understand which variables are numbers and which are something else? Lets check: str(grasshopper) ## &#39;data.frame&#39;: 200 obs. of 7 variables: ## $ Name : chr &quot;naFan&quot; &quot;llEl&quot; &quot;MeMe&quot; &quot;eueort&quot; ... ## $ Affix : chr &quot;van&quot; &quot;&quot; &quot;&quot; &quot;de&quot; ... ## $ Surname : chr &quot;RmesoasR&quot; &quot;aBBa&quot; &quot;Kunenn&quot; &quot;yuyyn&quot; ... ## $ Group : chr &quot;A&quot; &quot;A&quot; &quot;A&quot; &quot;A&quot; ... ## $ Thorax : int 13 10 13 15 11 13 15 10 12 15 ... ## $ Wingspan: int 94 79 78 80 84 68 100 75 87 90 ... ## $ Sex : chr &quot;man&quot; &quot;man&quot; &quot;man&quot; &quot;vrouw&quot; ... Question: Is the data read correctly into R? What do you think chr and int mean? 9.2 Plotting the Data Just looking at code and numbers is a bit stale. So lets start off by making some relevant plots: par(mfrow = c(2, 2)) # Plot in a 2x2 grid hist(grasshopper$Thorax, col = &quot;lightgray&quot;) hist(grasshopper$Wingspan, col = &quot;lightgray&quot;) plot(Thorax ~ Wingspan, data = grasshopper, col = factor(Sex)) boxplot(Wingspan ~ Sex, data = grasshopper, col = c(&quot;blue&quot;, &quot;orange&quot;)) par(mfrow = c(1, 1)) # Restore the default Question: What does each plot show? Can you change the code to make different plots? (You can try changing the variable names, or change the graphical parameters.) 9.3 Subsetting We just read the whole data set. It contains the data from all groups Lets make a subset of the measurements performed by group A: Subset &lt;- grasshopper[grasshopper$Group == &quot;A&quot;, ] What does this code do? subset &lt;-: Create a variable named Subset; grasshopper[x, y]: From the data set grasshopper, select only rows x and columns y. If y is left blank, it selects all columns; grasshopper$Groep == \"A\": From the data set grasshopper, select the variable Group and check if it is equal to the value A (TRUE) or not (FALSE). Question: Can you change the code to make a subset of your own group? (Skip this if you happen to be in A.) Make two more subsets called Male and Female, which contain only the measurements of their respective sex. (Optional) Using R code, can you make a subset that contains only the male measurements, and only of your group? 9.4 \\(T\\)-Test Below is an example of a \\(t\\)-test, using some standard data in R: t.test(extra ~ group, data = sleep, alternative = &quot;less&quot;, var.equal = TRUE) ## ## Two Sample t-test ## ## data: extra by group ## t = -1.8608, df = 18, p-value = 0.03959 ## alternative hypothesis: true difference in means is less than 0 ## 95 percent confidence interval: ## -Inf -0.1076222 ## sample estimates: ## mean in group 1 mean in group 2 ## 0.75 2.33 This particular \\(t\\)-test is a one-sided \\(t\\)-test for equal variance. The output shows that the mean of group 1 is \\(0.75\\) hours of extra sleep, while the mean of group 2 is \\(2.33\\). The \\(p\\)-value for this test is \\(0.0396\\). If we use a level of significance of \\(\\alpha = 0.05\\), then group 2 is has a significantly larger mean than group 1, because \\(0.0396 &lt; 0.05\\). Question: Watch the video below and choose a \\(t\\)-test you deem appropriate for: Comparing male and female thorax length; Comparing male and female wingspan length. (They could be the same, just explain briefly why you chose that test.) Question: Perform the tests you chose for (1) and (2) in R and draw a conclusion. This is no matter of life or death, just a comparison of grasshoppers. The consequence of a false positive8 is not that severe, so you may use a more liberal value of \\(\\alpha = 0.10\\). Compare your results with at least one other group. If your conclusion differs, can you explain why? (Optional) You performed two tests. That means that both can result in a false positive. With \\(\\alpha = 0.10\\), what is the chance of at least one false positive when performing two tests? (Optional) Did we now prove that grasshopper males and females (dont) differ in physical dimensions? What are some of the limitations of this comparison? Concluding a significant difference in the sample, even though the population of grasshoppers do not differ on average. "],["references.html", "References", " References "]]
